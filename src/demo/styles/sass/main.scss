@use 'sass:map';
@use './data';
@use './palette-tokens';

html {
  font-size: calc(1em / 1.6);
}

body {
  margin: 0;
  padding: 4rem 1.2rem;
  font-family: 'Inter', sans-serif;
  display: grid;
}

h2 {
  margin-top: 0;
  margin-bottom: 1rem;
  font-size: 2.8rem;
  color: oklch(15% 0 0);
}

p {
  margin-top: 0;
  margin-bottom: 1.2rem;

  font-size: 1.8rem;
  line-height: 1.5;
  color: oklch(20% 0 0);
}

.s-section {
  display: grid;
  justify-items: center;
}

.s-container {
  width: min-content;
  padding: 4rem 0;
}

.c-color-palettes-container {
  display: grid;
  justify-items: center;
  gap: 3.2rem;
}

.c-color-palette {
  display: grid;
  grid-auto-flow: column;
  gap: 1rem;
}

.c-color-palette__lightness-variant {
  width: 21.5rem;
  height: 6rem;
  border-radius: 1rem;
}

.c-color-palette__color-code {
  margin-top: 0.6rem;
  font-size: 1.3rem;
}

.u-mb-10 {
  margin-bottom: 4rem;
}

@mixin tokens($color-name, $chroma-type) {
  $lightness: data.$lightness-min-value;

  $chroma-token-string: '';

  @if ($chroma-type == 'rc') {
    // prettier-ignore
    $chroma-token-string: #{$chroma-type}#{data.$relative-chroma};
  } @else if ($chroma-type == 'ac') {
    // prettier-ignore
    $chroma-token-string: #{$chroma-type}#{data.$absolute-chroma-string};
  }

  .c-color-palette__lightness-variant--#{$chroma-type}-#{$color-name}5 {
    background-color: var(--b__color__#{$color-name}__#{$chroma-token-string}__5);
  }

  @while $lightness <= data.$lightness-max-value {
    .c-color-palette__lightness-variant--#{$chroma-type}-#{$color-name}#{$lightness} {
      background-color: var(--b__color__#{$color-name}__#{$chroma-token-string}__#{$lightness});
    }

    $lightness: $lightness + data.$lightness-steps;
  }

  .c-color-palette__lightness-variant--#{$chroma-type}-#{$color-name}95 {
    background-color: var(--b__color__#{$color-name}__#{$chroma-token-string}__95);
  }
}

:root {
  @each $hue, $color-name in data.$color-names {
    @include tokens($color-name, 'rc');
  }

  @each $hue, $color-name in data.$color-names {
    @include tokens($color-name, 'ac');
  }
}
